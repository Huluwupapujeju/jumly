extends layout
block content
  !=css('jumly')
  !=js('jumly')
  .container-fluid
    .row-fluid
      .span2
        h1.logo
          .brand JUMLY
          small Be concentrative into your idea with JUMLY
        nav
          ul
            li What's JUMLY?
            li Getting Started
            li Did you have these experiences?
            li Why you use JUMLY
      .span10
        h1 What's JUMLY?
        :jumly(type=sequence)
          @found "You", ->
            @message "Think", ->
              @message "Write your idea", "JUMLY", ->
                @create "Styled Node"
        
        :code
          @found "You", ->
            @message "Think", ->
              @message "Write your idea", "JUMLY", ->
                @create "Styled Node"
        p
          | JUMLY is a JavaScript library, UML diagram rendering engine.
          | Using JUMLY, you can easily embed UML diagram on your HTML document.  
          | All you need are just two in order to use JUMLY.
        ul
          li Text editor you get used to use.
          li Modern browser like WebKit-base brwoser and Opera.<br>(now planning it works on other browsers, especially Firefox.)

        h1 Did you have these experiences?
        dl
          dt To do a lot
          dd
            | Getting many small diagrams which have a few icons and relationships. 
            | Then you launched an UML modeling tool, and create a new project, and make a model, ...
          dt Cannot reuse
          dd Wanted to copy a string, like a class name and something phrase, from UML note icon.
          dt Ugly looks 
          dd
            | There was something you don't like at diagram which application generated.
            | For instance, color, size, line width, font, and so on.
          input#read_more_did_you_have(type="checkbox","data-bind"="checked:read_more.did_you_have",style="display:none")
          label(for="read_more_did_you_have")
            a More...
          .more("data-bind"="visible:read_more.did_you_have")
            dt What changed?
            dd Couldn't understand difference b/w old diagram and updated one.
            dt Cannot view
            dd Couldn't open an application file on other computer you don't usually use.
          

        h1 Why you use JUMLY
        dl
          dt Everything is text
          dd
            | Input data is text, and output format is text/html. It's great advantage to proprietary binnary data format,
            | because we can use SCM like Subversion/Mercurial/Git to manage and version the data.
          dt Easy to use
          dd You need only a web browser and a text editor you get used to.
          dt Fast for everything
          dd The time you get a diagram since you want it. The time JUMLY render diagram. The time you know JUMLY.
          input#read_more_why_you_use_jumly(type="checkbox","data-bind"="checked:read_more.why_you_use_jumly",style="display:none")
          label(for="read_more_why_you_use_jumly")
            a More...
          .more("data-bind"="visible:read_more.why_you_use_jumly")
            dt High quality
            dd You can get keen designed diagrams, especially on MacOSX
            dt Concentrative
            dd You can concentrate on your modeling regardless of the layout for UML icons.
            dt Based on DOM and jQuery
            dd Diagrams JUMLY renders are composed with DOM/jQuery node, so you've already understand the way to handle them.
            dt Powered by HTML5/CSS3
            dd
              | In addition the above, you will get HTML5/CSS3 bless.
              | For example, you can edit the styles of icons applying CSS.
            dt Light and small
            dd
              | Now the size of script is 56KB, and the size of stylesheet is 16KB.
              | They are relatively lighter than the UML modeling tools =)

        h1 JUMLY Family
        dl
          dt jade-jumly
          dd provide jade filter

  :coffeescript
    viewModel =
      read_more:
        why_you_use_jumly: ko.observable false
        did_you_have: ko.observable false
    ko.applyBindings viewModel, document.body

