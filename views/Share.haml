!!! 5
%html
  %head
    %title JUMLY Share
    = haml :"_head.html"
    = haml :"_bootstrap.html"
    :css
      body {margin-top:44px;}
      .alert-message {right:0px;margin:2px;position:fixed;top:40px;}
      .alert-message.error .content {white-space:pre;font-family:Monaco,mono;font-size:9pt;}
      .diagram {margin: 0 auto 0 auto;}
      .footer {position:absolute;bottom:0px;text-align:center;width:100%;background:rgba(24,24,24,1);opacity:0.87;z-index:10;color:white;text-shadow:1px 0 gray;padding:2px 0 2px 0;}
  %body
    .topbar
      .topbar-inner
        .container-fluid
          %h3 <a href="/#">JUMLY</a>
          %ul <li><a href="/TryJUMLY">TryJUMLY</a></li>
          %ul <li><a href="/Reference.html">Reference</a></li>
    .container
      .diagram-container
      .alert-message.info
        %p.content
    .footer
      version #{File.read "VERSION"}
    .alert-message.block-message.error.hide
      %h2 Error
      %strong.message
      %p.content
      
  %script{src:"#{$js_dir}/base64.js"}
  /
    QueryParams
    t:  string    Encode type for 'b' param (default: b64)
    b:  string    JUMLY body (required)
      
  :coffeescript
    b = {}
    b[e[0]] = e[1] for e in (e.split("=") for e in location.search.replace(/^\?/, "").split("&"))
    switch b.t
      when 'raw' then directs = decodeURIComponent b.b
      else directs = Base64.decode b.b
    tryUrl = "/TryJUMLY?b=\#{b.b}"
    $ ->
      try
        $(".alert-message.info").find(".content").html "<a href='\#{tryUrl}'>Click here to edit this.<a>"
        $(".diagram-container").jumlize "sequence", directs, ->
      catch ex
        $(".alert-message.error")
          .find(".message").text(ex.message).end()
          .find(".content").text(directs).end()
          .alert().fadeIn()
