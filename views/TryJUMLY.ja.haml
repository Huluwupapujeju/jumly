!!! 5
%html
  %head
    %title Try JUMLY
    %link{rel:"stylesheet",href:"#{$css_dir}/TryJUMLY.css"}
    %link{rel:"stylesheet",href:"#{$css_dir}/3rd-party.css"}
    = haml :"_head.html"
    = haml :"_bootstrap.html"
  %body
    .topbar
      .topbar-inner
        .container-fluid
          %h3 <a href="/#">JUMLY</a>
          - def _sr(n, t) "<a id='sample-#{n}' data-bind='click:sampleRequired'>#{t}</a>" end
          - def _tr(n0, n1, t) "<a id='tutorial-#{n0}-#{n1}' data-step='#{n0}' data-sub='#{n1}' data-bind='click:tutorialRequired'>#{t}</a>" end
          %ul.nav
            %li #{_sr 1, "サンプル-1"}
            %li #{_sr 2, "サンプル-2"}
            %li #{_sr 3, "サンプル-3"}
            %li.dropdown{"data-dropdown"=>"dropdown"}
              %a.dropdown-toggle その他のサンプル
              %ul.dropdown-menu
                %li #{_sr 4, "bit.lyでの短縮"}
                %li #{_sr 5, "&lt;img&gt;タグを使う"}
                - [1,2,3,4].each do |e|
                  %li #{_tr "data1", e-1, "ステップ1-#{e}"}
                - [1,2,3,4].each do |e|
                  %li #{_tr "data2", e-1, "ステップ2-#{e}"}
                %li #{_tr "data3", 0, "ステップ3-1"}
            %li <a href="/Reference.html">リファレンス</a>
            %li <a href="#" data-bind="click:askTutorial">チュートリアルを開始する</a>
            %li <a href="#" data-controls-modal="tryjumly-help" data-backdrop="static" data-keyboard="true">ヘルプ</a>
            %li.dropdown{"data-dropdown"=>"dropdown"}
              %a.dropdown-toggle 言語
              %ul.dropdown-menu
                %li <a href="TryJUMLY">英語</a>
    .container-fluid
      .page-header
        %h1 Try JUMLY <small>Sandbox for シーケンスダイアグラム</small>
        #3rd-party-buttons{style:"position:fixed;right:160px;top:44px;"}
          %img{height:"20px",style:"margin-bottom:-4px",src:"/assets/ic_chats.png","data-bind"=>"click:openDisqus"}
          <div class="fb-like" data-send="true" data-layout="button_count" data-width="0" data-show-faces="false"></div>
          <a style='margin-left:-38px;' href="#" onclick="Evernote.doClip({contentId:'diagram-container',providerName:'Try JUMLY'}); return false;"><img src="http://static.evernote.com/article-clipper.png" alt="Clip to Evernote"/></a>
          <div class="g-plusone" data-size="medium" data-href="http://jumly.dev/TryJUMLY"></div>
          <a style='margin-left:-20px;' href="https://twitter.com/share" class="twitter-share-button" data-via="jumly1" data-related="jumly1" data-hashtags="jumly">Tweet</a>
        #jumly-buttons
          %a#link-to-share.btn.primary{"data-controls-modal"=>"url-to-show","data-bind"=>"click:tutorial.share"} 共有用リンクを表示する
      .row
        .span7.columns
          %textarea#jumlipt{"data-bind"=>"value:targetJumlipt,valueUpdate:'afterkeydown'",rows:26,placeholder:"ここにJUMLIPTを入力します。もしくは画面上部のサンプルを選択してください。"}
        .span9.columns            
          #diagram-container{"data-bind"=>"jumly:diagram,success:success,error:error"}
          = haml :"_TryJUMLYTutorial.ja"
    .bottombar
      = $copyright_html
      JUMLY v#{File.read "VERSION"}
    
    .alert-message.block-message.error.notice.hide{"data-bind"=>'template:{name:"alert-error",data:errorReason}'}
    %script#alert-error{type:"text/html"}
      %h3 Error
      %p
        %strong type: ${type}
        ${message}
      %p
        %strong message:
        %span.message ${cause}

    .alert-message.block-message.success.notice.hide
      %h3 Success
      %p Rendering was succeeded.

    #auto-save-message.alert-message.info.hide{style:"position:absolute;right:2px"}
      %p Auto-save.

    #url-to-show.modal.hide{"data-bind"=>"template:{name:'show-URL',data:urlToShare}"}
    %script#show-URL{type:"text/html"}
      .modal-header
        %h2 URL To Share
      .modal-body
        %h3 Short URL
        .short <a href='${short}' target='shortURL'>${short}</a>
        %h3 Raw URL
        .long <a href='${long}' target='rawURL'>${long}</a>
      .modal-footer
        %a.btn.cancel Close

    #tryjumly-help.modal.hide
      .modal-body
        %img{src:"/assets/TryJUMLY-overview.png",width:"100%"}
      .modal-body.description
        [Examples]をクリックするとサンプルJUMLIPTと対応するダイアグラムを描画します。
        [Link To Share]ボタンをクリックすると共有用のリンクを表示します。
      .modal-footer
        %a.btn.cancel 閉じる
        
    / Facebook Like button
    #fb-root
    
    / DISQUS Thread
    #disqus_thread{"data-bind"=>"visible:disqusOpened()"}
      /<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
      /<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>
    
    :javascript
      /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
      var disqus_shortname = 'jumly'; // required: replace example with your forum shortname
      /* * * DON'T EDIT BELOW THIS LINE * * */
      (function() {
          var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
          dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
      })();

  %script{src:"#{$js_dir}/btn.js"}
  <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
  <script src='http://www.go2web20.net/twitterfollowbadge/1.0/badge.js' type='text/javascript'></script><script type='text/javascript' charset='utf-8'>tfb.account='jumly1';tfb.label='follow-me';tfb.color='#404040';tfb.side ='r';tfb.top=136;tfb.showbadge();</script>
  %script{src:"#{$js_dir}/base64.js"}
  %script{src:"#{$js_dir}/TryJUMLY.js"}
  %script{src:"http://static.evernote.com/noteit.js"}

  :coffeescript
    $(document).on "show", ".alert-message", (e)-> setTimeout (-> $(e.target).fadeOut()), 2000
    $(document).on "click", ".alert-message .btn.cancel", (e)-> $(this).parents(".alert-message").hide()
    $(document).on "click", ".modal .btn.cancel", (e)-> $(this).parents(".modal").modal 'hide'
    
    storage = window.localStorage
    storeKey = "TryJUMLY.sequence.jumlipt"
    qp = {}
    qp[e[0]] = e[1] for e in (e.split("=") for e in location.search.replace(/^\?/, "").split("&"))
    initialJumlipt = (if qp.b then Base64.decode qp.b else storage.getItem storeKey) || ""
    
    viewModel =
      targetJumlipt: ko.observable initialJumlipt
      sampleRequired: (model, event)->
        model.targetJumlipt JUMLY.TryJUMLY.samples[event.target.id]
      tutorialRequired: (model, event)->
        a = $(event.target)
        model.targetJumlipt JUMLY.TryJUMLY.Tutorial[a.attr("data-step")][a.attr("data-sub")]
      success: ->
        a = $(".alert-message").hide()
        if $(".diagram > *").length > 0
          a.filter(".success").show().trigger "show"
      errorReason: ko.observable {}
      error: (reason)->
        viewModel.errorReason reason
        $(".alert-message").hide().filter(".error").show()
      urlToShare:
        short: ko.observable "..."
        long: ko.observable "..."
      typing:
        delay:5000, stop:(e)->
          storage.setItem storeKey, viewModel.targetJumlipt()
          $("#auto-save-message").fadeIn().trigger "show"
      disqusOpened: ko.observable false
      openDisqus: -> @disqusOpened !@disqusOpened()

    viewModel.diagram = JUMLY.ko.dependentObservable viewModel.targetJumlipt, 'sequence'
    
    JUMLY.TryJUMLY.Tutorial.bootup viewModel
    
    $ ->
      ko.applyBindings viewModel, $("body")[0]
      
      $("textarea").typing viewModel.typing
      $("#url-to-show").modal(backdrop:"static",keyboard:true).bind "show", ->
        path = "/Share?b=\#{Base64.encode viewModel.targetJumlipt()}"
        longUrl = "\#{location.origin}\#{path}"
        viewModel.urlToShare.long longUrl
        JUMLY.TryJUMLY.bitly longUrl, (res)->
          console.error "bit.ly returns something wrong.", res if res.errorCode
          viewModel.urlToShare.short res.results[longUrl].shortUrl

      JUMLY.TryJUMLY.Tutorial.start viewModel
