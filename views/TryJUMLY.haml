!!! 5
%html
  %head
    %title Try JUMLY
    = haml :"_head.html"
    = haml :"_bootstrap.html"
    :css
      textarea {width:100%; font-family:Monaco,'Courier New';font-size:9pt; border:none; box-shadow:none; background-color:rgba(255,255,255,0.2);}
      #link-to-share {position:absolute; right:0; top:40px; margin:2px;}
      #url-to-show .short, #url-to-show .long {white-space:pre-wrap;word-wrap:break-word;}
      .alert-message {width:100%;left:0px;bottom:0px;position:fixed;margin:0px;}
      .bottombar {background-color:rgba(39,39,39,1.0);position:fixed;bottom:0;width:100%;padding:4px;color:#BFBFBF;}
      .modal img {border:solid 1px rgba(128,128,128,0.7);box-shadow:3px 2px 3px 2px rgba(128,128,128,0.7);}
  %body
    .topbar
      .topbar-inner
        .container-fluid
          %h3 <a href="/#">JUMLY</a>
          - def _sr(n, t) "<a id='sample-#{n}' data-bind='click:sampleRequired'>#{t}</a>" end
          %ul.nav
            %li #{_sr 1, "Sample-1"}
            %li #{_sr 2, "Sample-2"}
            %li #{_sr 3, "Sample-3"}
            %li.dropdown{"data-dropdown"=>"dropdown"}
              %a.dropdown-toggle Other samples
              %ul.dropdown-menu
                %li #{_sr 4, "Shorten w/ bit.ly"}
                %li #{_sr 5, "Using &lt;img&gt;"}
            %li <a href="/Reference.html">Reference</a>
            %li <a href="#" data-controls-modal="TryJUMLY-Help" data-backdrop="static" data-keyboard="true">Help</a>
    .container-fluid
      .page-header
        %h1 Try JUMLY <small>Sequence Diagram</small>
        %a#link-to-share.btn.primary{"data-controls-modal"=>"url-to-show"} Link To Share
      .row
        .span7.columns
          %textarea{"data-bind"=>"value:targetJumlipt,valueUpdate:'afterkeydown'",rows:26,placeholder:"Put directives"}
        #diagram-container.span9.columns{"data-bind"=>"jumly:diagram,success:success,error:error"}
    .bottombar
      JUMLY v#{File.read "VERSION"} Tomotaka Sakuma 2012 copyright(c), all rights reserved.
    
    .alert-message.block-message.error.hide{"data-bind"=>'template:{name:"alert-error",data:errorReason}'}
    %script#alert-error{type:"text/html"}
      %h3 Error
      %p
        %strong type: ${type}
        ${message}
      %p
        %strong message:
        %span.message ${cause}

    .alert-message.block-message.success.hide
      %h3 Success
      %p Rendering was succeeded.

    .alert-message.info.hide
      Auto-save the current jumlipt.
    
    #url-to-show.modal.hide{"data-bind"=>"template:{name:'show-URL',data:urlToShare}"}
    %script#show-URL{type:"text/html"}
      .modal-header
        %h2 URL To Share
      .modal-body
        %h3 Short URL
        .short <a href='${short}' target='shortURL'>${short}</a>
        %h3 Raw URL
        .long <a href='${long}'>${long}</a>
      .modal-footer
        %a.btn Close

    #TryJUMLY-Help.modal.hide
      .modal-body
        %img{src:"/assets/TryJUMLY-overview.png",width:"100%"}
      .modal-body
        If you click one of [Examples], you get a sample jumlipt in [Input Jumplit] area.
        At the same time, a diagram corresponding to the jumplipt is rendered in [Diagram appears] area.
        If you click [Display URL to share], you get raw and shorten URL to view the diagram.
      .modal-footer
        %a.btn Close

  %script{src:"#{$js_dir}/base64.js"}
  %script{src:"#{$js_dir}/TryJUMLY.js"}

  :coffeescript
    $(document).on "show", ".alert-message", (e)-> setTimeout (-> $(e.target).fadeOut()), 2000
    $(document).on "click", ".modal .btn", (e)-> $(this).parents(".modal:first").modal 'hide'
    
    storage = window.localStorage
    storeKey = "TryJUMLY.sequence.jumlipt"
    qp = {}
    qp[e[0]] = e[1] for e in (e.split("=") for e in location.search.replace(/^\?/, "").split("&"))
    initialJumlipt = (if qp.b then Base64.decode qp.b else storage.getItem storeKey) || ""
    
    viewModel =
      targetJumlipt: ko.observable initialJumlipt
      sampleRequired: (model, event)->
        model.targetJumlipt JUMLY.TryJUMLY.samples[event.target.id]
      success: ->
        a = $(".alert-message").hide()
        if $(".diagram > *").length > 0
          a.filter(".success").show().trigger "show"
      errorReason: ko.observable {}
      error: (reason)->
        viewModel.errorReason reason
        $(".alert-message").hide().filter(".error").show()
      urlToShare:
        short: ko.observable "..."
        long: ko.observable "..."
      typing:
        delay:5000, stop:(e)->
          storage.setItem storeKey, viewModel.targetJumlipt()
          $(".alert-message.info").fadeIn().trigger "show"
                
    viewModel.diagram = JUMLY.ko.dependentObservable viewModel.targetJumlipt, 'sequence'
    
    $ ->
      ko.applyBindings viewModel, $("body")[0]
      $("textarea").focus().typing viewModel.typing
      $("#url-to-show").modal(backdrop:"static",keyboard:true).bind "show", ->
        path = "/Share?b=\#{Base64.encode viewModel.targetJumlipt()}"
        longUrl = "\#{location.origin}\#{path}"
        viewModel.urlToShare.long longUrl
        JUMLY.TryJUMLY.bitly longUrl, (res)->
          viewModel.urlToShare.short res.results[longUrl].shortUrl
