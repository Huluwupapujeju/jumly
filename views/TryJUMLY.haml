!!! 5
%html
  %head
    %title Try JUMLY
    = haml :"_head.html"
    = haml :"_bootstrap.html"
    :css
      textarea {width:100%; font-family:Monaco,'Courier New';font-size:9pt;}
      #url-to-show .short, #url-to-show .long {white-space:pre-wrap;word-wrap:break-word;}
      .alert-message {width:100%;left:0px;bottom:0px;position:fixed;margin:0px;}
  %body
    .topbar
      .topbar-inner
        .container-fluid
          %h3 <a href="/#">JUMLY</a>
          %ul <li><a id="sample-1" data-bind="click:sampleRequired">Sample-1</a></li>
          %ul <li><a id="sample-2" data-bind="click:sampleRequired">Sample-2</a></li>
          %ul <li><a id="sample-3" data-bind="click:sampleRequired">Sample-3</a></li>
          %ul <li><a href="/Reference.html">Reference</a></li>
    .container-fluid
      .page-header
        %h1 Try JUMLY <small>Sequence Diagram</small>
      .row
        .span6.columns
          %textarea{"data-bind"=>"value:targetJumlipt,valueUpdate:'afterkeydown'",rows:20,placeholder:"Put directives"}
          %a.btn{"data-controls-modal"=>"url-to-show"} Show URL
        #diagram-container.span10.columns{"data-bind"=>"jumly:diagram,success:success,error:error"}

      .alert-message.block-message.error.hide{"data-bind"=>'template:{name:"alert-error",data:errorReason}'}
      %script#alert-error{type:"text/html"}
        %h3 Error
        %p
          %strong type: ${type}
          ${message}
        %p
          %strong message:
          %span.message ${cause}
  
      .alert-message.block-message.success.hide{"data-bind"=>'template:{name:"alert-success"}'}
      %script#alert-success{type:"text/html"}
        %h3 Success
        %p Rendering was succeeded.
      
      #url-to-show.modal.hide{"data-bind"=>"template:{name:'show-URL',data:urlToShare}"}
      %script#show-URL{type:"text/html"}
        .modal-header
          %h2 URL To Share
        .modal-body
          %h3 Short URL
          .short <a href='${short}' target='shortURL'>${short}</a>
          %h3 Raw URL
          .long <a href='${long}'>${long}</a>
        .modal-footer
          %a.btn Close
          
  %script{src:"#{$js_dir}/base64.js"}
  %script{src:"#{$js_dir}/knockout.js"}
  %script{src:"#{$js_dir}/TryJUMLY.js"}

  :coffeescript
    storage = window.localStorage
    storeKey = "TryJUMLY.sequence"
    
    ## Initially restored script
    qp = {}
    qp[e[0]] = e[1] for e in (e.split("=") for e in location.search.replace(/^\?/, "").split("&"))
    if qp.b
      d = Base64.decode qp.b
    else
      d = storage.getItem storeKey
    
    viewModel =
      targetJumlipt: ko.observable d
      sampleRequired: (model, event)->
        model.targetJumlipt JUMLY.TryJUMLY.samples[event.target.id]
      success: ->
        $(".alert-message").hide().filter(".success").show().trigger "show"
      errorReason: ko.observable {}
      error: (reason)->
        console.error reason
        viewModel.errorReason reason
        $(".alert-message").hide().filter(".error").show()
      urlToShare:
        short: ko.observable "..."
        long: ko.observable "..."
    viewModel.diagram = JUMLY.ko.dependentObservable viewModel.targetJumlipt, 'sequence'
        
    $(document).on "show", ".alert-message", (e)-> setTimeout (-> $(e.target).fadeOut('fast')), 1500
    urlToShow = $("#url-to-show")
    $(document).on "click", "\#{urlToShow.selector} .btn", (e)-> urlToShow.modal 'hide'
    
    $ ->
      ko.applyBindings viewModel, $("body")[0]
      $("textarea").focus()
      urlToShow.modal(backdrop:"static",keyboard:true).bind "show", ->
        path = "/Share?b=\#{Base64.encode viewModel.targetJumlipt()}"
        longUrl = "\#{location.origin}\#{path}"
        viewModel.urlToShare.long longUrl
        JUMLY.TryJUMLY.bitly longUrl, (res)->
          viewModel.urlToShare.short res.results[longUrl].shortUrl
