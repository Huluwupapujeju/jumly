!!! 5
%html
  %head
    %title Try JUMLY
    %link{rel:"stylesheet",href:"#{$css_dir}/TryJUMLY.css"}
    = haml :"_head.html"
    = haml :"_bootstrap.html"
  %body
    .topbar
      .topbar-inner
        .container-fluid
          %h3 <a href="/#">JUMLY</a>
          - def _sr(n, t) "<a id='sample-#{n}' data-bind='click:sampleRequired'>#{t}</a>" end
          - def _tr(n, t) "<a id='tutorial-#{n}' data-bind='click:tutorialRequired'>#{t}</a>" end
          %ul.nav
            %li #{_sr 1, "Example-1"}
            %li #{_sr 2, "Example-2"}
            %li #{_sr 3, "Example-3"}
            %li #{_tr "1-0", "Tutorial step1-1"}
            %li.dropdown{"data-dropdown"=>"dropdown"}
              %a.dropdown-toggle Other examples
              %ul.dropdown-menu
                %li #{_sr 4, "Shorten w/ bit.ly"}
                %li #{_sr 5, "Using &lt;img&gt;"}
            %li <a href="/Reference.html">Reference</a>
            %li <a href="#" data-bind="click:askTutorial">Tutorial</a>
            %li <a href="#" data-controls-modal="tryjumly-help" data-backdrop="static" data-keyboard="true">Help</a>
    .container-fluid
      .page-header
        %h1 Try JUMLY <small>Sequence Diagram</small>
        %a#link-to-share.btn.primary{"data-controls-modal"=>"url-to-show","data-bind"=>"click:tutorial.share"} Link To Share
      .row
        .span7.columns
          %textarea#jumlipt{"data-bind"=>"value:targetJumlipt,valueUpdate:'afterkeydown'",rows:26,placeholder:"Write JUMLIPT here, or click one of examples."}
        .span9.columns            
          #diagram-container{"data-bind"=>"jumly:diagram,success:success,error:error"}
          = haml :"_TryJUMLYTutorial"
    .bottombar
      = $copyright_html
      JUMLY v#{File.read "VERSION"}
    
    .alert-message.block-message.error.notice.hide{"data-bind"=>'template:{name:"alert-error",data:errorReason}'}
    %script#alert-error{type:"text/html"}
      %h3 Error
      %p
        %strong type: ${type}
        ${message}
      %p
        %strong message:
        %span.message ${cause}

    .alert-message.block-message.success.notice.hide
      %h3 Success
      %p Rendering was succeeded.

    #auto-save-message.alert-message.info.hide{style:"position:absolute;right:2px"}
      %p Auto-save.

    #url-to-show.modal.hide{"data-bind"=>"template:{name:'show-URL',data:urlToShare}"}
    %script#show-URL{type:"text/html"}
      .modal-header
        %h2 URL To Share
      .modal-body
        %h3 Short URL
        .short <a href='${short}' target='shortURL'>${short}</a>
        %h3 Raw URL
        .long <a href='${long}' target='rawURL'>${long}</a>
      .modal-footer
        %a.btn.cancel Close

    #tryjumly-help.modal.hide
      .modal-body
        %img{src:"/assets/TryJUMLY-overview.png",width:"100%"}
      .modal-body
        If you click one of [Examples], you get a sample <a href="/Reference.html#terminology-jumlipt">jumlipt</a> in [Input Jumplit] area.
        At the same time, a diagram corresponding to the jumplipt is rendered in [Diagram appears] area.
        If you click [Display URL to share], you get raw and shorten URL to view the diagram.
      .modal-footer
        %a.btn.cancel Close

  %script{src:"#{$js_dir}/base64.js"}
  %script{src:"#{$js_dir}/TryJUMLY.js"}

  :coffeescript
    $(document).on "show", ".alert-message", (e)-> setTimeout (-> $(e.target).fadeOut()), 2000
    $(document).on "click", ".alert-message .btn.cancel", (e)-> $(this).parents(".alert-message").hide()
    $(document).on "click", ".modal .btn.cancel", (e)-> $(this).parents(".modal").modal 'hide'
    
    storage = window.localStorage
    storeKey = "TryJUMLY.sequence.jumlipt"
    qp = {}
    qp[e[0]] = e[1] for e in (e.split("=") for e in location.search.replace(/^\?/, "").split("&"))
    initialJumlipt = (if qp.b then Base64.decode qp.b else storage.getItem storeKey) || ""
    
    viewModel =
      targetJumlipt: ko.observable initialJumlipt
      sampleRequired: (model, event)-> model.targetJumlipt JUMLY.TryJUMLY.samples[event.target.id]
      tutorialRequired: (model, event)-> ##FIXME
      success: ->
        a = $(".alert-message").hide()
        if $(".diagram > *").length > 0
          a.filter(".success").show().trigger "show"
      errorReason: ko.observable {}
      error: (reason)->
        viewModel.errorReason reason
        $(".alert-message").hide().filter(".error").show()
      urlToShare:
        short: ko.observable "..."
        long: ko.observable "..."
      typing:
        delay:5000, stop:(e)->
          storage.setItem storeKey, viewModel.targetJumlipt()
          $("#auto-save-message").fadeIn().trigger "show"

    viewModel.diagram = JUMLY.ko.dependentObservable viewModel.targetJumlipt, 'sequence'
    
    JUMLY.TryJUMLY.Tutorial.bootup viewModel
    
    $ ->
      ko.applyBindings viewModel, $("body")[0]
      
      $("textarea").typing viewModel.typing
      $("#url-to-show").modal(backdrop:"static",keyboard:true).bind "show", ->
        path = "/Share?b=\#{Base64.encode viewModel.targetJumlipt()}"
        longUrl = "\#{location.origin}\#{path}"
        viewModel.urlToShare.long longUrl
        JUMLY.TryJUMLY.bitly longUrl, (res)->
          console.error "bit.ly returns something wrong.", res if res.errorCode
          viewModel.urlToShare.short res.results[longUrl].shortUrl

      JUMLY.TryJUMLY.Tutorial.start viewModel
