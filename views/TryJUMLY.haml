!!! 5
%html
  %head
    %title Try JUMLY
    = haml :"_head.html"
    = haml :"_bootstrap.html"
    :css
      textarea {width:100%; font-family:Monaco,'Courier New';font-size:9pt;}
      #link-to-show .short, #link-to-show .long {white-space:pre-wrap;word-wrap:break-word;}
      .alert-message {width:100%;left:0px;bottom:0px;position:fixed;margin:0px;}
  %body
    .topbar
      .topbar-inner
        .container-fluid
          %h3 <a href="/#">JUMLY</a>
          %ul <li><a id="sample-1" data-bind="click:sampleRequired">Sample-1</a></li>
          %ul <li><a id="sample-2" data-bind="click:sampleRequired">Sample-2</a></li>
          %ul <li><a id="sample-3" data-bind="click:sampleRequired">Sample-3</a></li>
          %ul <li><a href="/Reference.html">Reference</a></li>
    .container-fluid
      .page-header
        %h1 Try JUMLY <small>Sequence Diagram</small>
      .row
        .span6.columns
          %textarea{"data-bind"=>"value:targetJumlipt,valueUpdate:'afterkeydown'",rows:20,placeholder:"Put directives"}
          %a.btn{"data-controls-modal"=>"link-to-show"} Show Link
        #diagram-container.span10.columns{"data-bind"=>"jumly:diagram,success:success,error:error"}

      .alert-message.block-message.error.hide{"data-bind"=>'template:{name:"alert-error",data:errorReason}'}
      %script#alert-error{type:"text/html"}
        %h3 Error
        %strong type: ${type}
        ${message}
        %strong message:
        %span.message ${cause}
  
      .alert-message.block-message.success.hide{"data-bind"=>'template:{name:"alert-success"}'}
      %script#alert-success{type:"text/html"}
        %h3 Success
        %p Rendering was succeeded.
      
      #link-to-show.modal.hide{"data-bind"=>"template:{name:'show-URL'}"}
      %script#show-URL{type:"text/html"}
        .modal-header
          %h2 Link To Share
        .modal-body
          %h3 Short Link
          .short
          %h3 Raw Link
          .long
        .modal-footer
          %a.btn Close
          
  %script{src:"#{$js_dir}/base64.js"}
  %script{src:"#{$js_dir}/knockout.js"}
  %script{src:"#{$js_dir}/TryJUMLY.js"}

  :coffeescript
    storage = window.localStorage
    storeKey = "TryJUMLY.sequence"
    textarea = $ "textarea"
    
    ## Initially restored script
    qp = {}
    qp[e[0]] = e[1] for e in (e.split("=") for e in location.search.replace(/^\?/, "").split("&"))
    if qp.b
      d = Base64.decode qp.b
    else
      d = storage.getItem storeKey
    
    viewModel =
      targetJumlipt: ko.observable d
      sampleRequired: (model, event)->
        model.targetJumlipt JUMLY.TryJUMLY.samples[event.target.id]
      success: ->
        $(".alert-message").hide().filter(".success").show().trigger "show"
      errorReason: ko.observable {}
      error: (reason)->
        console.error reason
        viewModel.errorReason reason
        $(".alert-message").hide().filter(".error").show()
        
    $(document).on "show", ".alert-message", (e)->
      setTimeout (-> $(e.target).fadeOut('fast')), 1500

    ko.bindingHandlers.jumly =
      init: (elem, val, bindings, model)->
      update: (elem, val, bindings, model)->
        koarg = element:elem, valueAccessor:val, allBindingsAccessor:bindings, viewModel:model
        diag = ko.utils.unwrapObservable val()
        try
          $(elem).html diag
          throw diag unless diag.compose?
          diag.compose()
          bindings().success? {diagram:diag, ko:koarg}
        catch ex
          bindings().error? ($.extend ex, {type:ex.constructor.name, diagram:diag, ko:koarg})
          
    viewModel.diagram = ko.dependentObservable ->
      jumlipt = viewModel.targetJumlipt()
      try
        (new JUMLY.SequenceDiagramBuilder).build jumlipt
      catch ex
        new JUMLY.Error "Failed to build", ex, jumlipt
    
    $ ->
      textarea.focus()
      ko.applyBindings viewModel, $("body")[0]

      $("#link-to-show").modal(backdrop:"static",keyboard:true).bind "show", ->
        d = Base64.encode textarea.val()
        link = "/Share?b=\#{d}"
        longUrl = "\#{location.origin}/\#{link}"
        modal = $(this)
        modal.find(".btn").click -> modal.modal('hide')

        modal.find(".long").html "<a href='\#{link}'>\#{link}</a>"
        bitly = "http://api.bit.ly/shorten?version=2.0.1&login=tmtk75&apiKey=R_39bc09b13aac4481bc526f946f7d1538&longUrl=\#{encodeURIComponent longUrl}&callback=?"
        $.getJSON bitly, (res)->
          shortUrl = res.results[longUrl].shortUrl
          modal.find(".short").html "<a href='\#{shortUrl}' target='shortUrl'>\#{shortUrl}</a>"

